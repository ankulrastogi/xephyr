<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	   		http://www.springframework.org/schema/context
	   		http://www.springframework.org/schema/context/spring-context-3.1.xsd
			http://www.springframework.org/schema/mvc 
			http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
			http://www.springframework.org/schema/util 
			http://www.springframework.org/schema/util/spring-util-3.1.xsd">
	
	<!-- Activates various annotations to be detected in bean classes -->
	<context:annotation-config />
	<mvc:resources mapping="/resources/**" location="/resources/" />

	
	<!-- Scans the classpath for annotated components that will be auto-registered as Spring beans.
	 For example @Controller and @Service. Make sure to set the correct base-package-->
	<context:component-scan base-package="com.lifeway.dlt" />
	<!-- Configures the annotation-driven Spring MVC Controller programming model.
	Note that, with Spring 3.0, this tag works in Servlet MVC only!  -->
	<mvc:annotation-driven /> 
	
	<bean id="validator"
      class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>
       
    <bean class="org.springframework.validation.beanvalidation.MethodValidationPostProcessor"/>
	
	<!-- Logging -->
	<bean id="log4jInitialization"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetClass" value="org.springframework.util.Log4jConfigurer" />
		<property name="targetMethod" value="initLogging" />
		<property name="arguments">
			<value>classpath:log4j.xml</value>
		</property>
	</bean>
	
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>classpath:messages/messages</value>
				<value>classpath:messages/error-messages</value>
			</list>
		</property>
		<property name="cacheSeconds" value="0" />
	</bean>
	<bean id="exceptionMessageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>classpath:messages/exception-messages</value>
			</list>
		</property>
		<property name="cacheSeconds" value="0" />
	</bean>
	<!-- Load Hibernate related configuration -->
	<import resource="classpath:database-context.xml" />
		<!-- Mail Server Settings -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		 <property name="port" value="465" />
        <property name="protocol" value="smtp" />
        <property name="username" value="ashish.pandey@grapecity.com"/>
        <property name="password" value=""/>
        <property name="javaMailProperties">
                <value> 
                        mail.debug=true 
                        mail.smtp.auth=true
                        mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory
                        mail.smtp.socketFactory.fallback=false 
                </value>
                </property> 
	</bean>

	<bean id="emailMessageBuilderImpl" class="com.lifeway.dlt.util.EmailMessageBuilderImpl">
		<property name="mailSender" ref="mailSender" />
	</bean>
	
	
	
</beans>
